filevector v 0.0-7

filevector is (c) 2018 Yurii Aulchenko, EMCR, Lennart C. Karssen

filevector is distributed under GNU GPL v 2.0 or later

filevector is a class for working with large arrays of variables,
the key features are fast access to variables and low RAM 
consumption

----------------------------------------------------------

most useful API functions are:

void initilise_empty_file(char * filename, unsigned long int nvariables, unsigned long int nobservations, unsigned short int type);

	creates empty filevector file (you can fill that later on using "write"-functions)

filevector my_filevector;

	creates an filevector object (not yet connected to a file);

myfilevector.initialize(char * filename, unsigned long int cachesizeMb);
	
	connects the object to the fvf-file "filename" using "cachesizeMb" 
	Mb of cache recommendation: for most systems 2048 provides maximum 
	speed; however as little as 256 gives very good performance still
	value "0" is possible -- one variable at a time

void read_variable(unsigned long int nvar, DT * outvec);

	reads variable "nvar" to "outvec", updating cache 
	starting with "nvar" if "nvar" is not in cache

void write_variable(unsigned long int nvar, DT * datavec);

	writes variable "nvar" to "outvec"

DT read_element(unsigned long int nvar, unsigned long int nobs);

	reads an element "nobs" from variable "nvar"; this function 
	reads directly from file withput updating cache
	
void write_element(unsigned long int nvar, unsigned long int nobs, DT data);

	writes an element "nobs" from variable "nvar"
	

Read frvector.h for more info
